\c electronicbulling fhalcom;
CREATE EXTENSION  pgcrypto;
-- SECUENCIA PARA LOS ESTADOS
CREATE SEQUENCE IF NOT EXISTS electronicdocument.EDSSTATUS MINVALUE  5 START 5 INCREMENT 1;


-- TABLA QUE DEFINE LOS ESTADOS DE LOS DOCUMENTOS
CREATE TABLE IF NOT EXISTS electronicdocument.EDTSTATUS(
    ID NUMERIC(10) PRIMARY KEY,
    CODE VARCHAR(5) UNIQUE NOT NULL ,
    DESCRIPTION VARCHAR(100)  UNIQUE NOT NULL,
    DETAIL VARCHAR(300) NOT NULL
);

-- DATOS DE INICIALES DE ESTADO
INSERT INTO electronicdocument.EDTSTATUS (ID, CODE,DESCRIPTION,DETAIL) VALUES (1,'ACT','ACTIVO'  ,'ESTADO POR DEFECTO ACTIVOS');
INSERT INTO electronicdocument.EDTSTATUS (ID, CODE,DESCRIPTION,DETAIL) VALUES (2,'INT','INACTIVO','NO PEUDE HACER NADA EN EL SISTEMA NI INGRESAR A EL');
INSERT INTO electronicdocument.EDTSTATUS (ID, CODE,DESCRIPTION,DETAIL) VALUES (3,'TMP','TEMPORAL','TIENE ACCESO AL SISTEMA PERO CON OPCIONES LIMITADAS');
INSERT INTO electronicdocument.EDTSTATUS (ID, CODE,DESCRIPTION,DETAIL) VALUES (4,'SUS','SUSPENDIDO','PUEDE INGRESAR AL SISTEMA PERO NO REALIAR ACCIONES DENTRO');

-- SECUENCIA PARA AMBIENTES
CREATE SEQUENCE IF NOT EXISTS electronicdocument.EDSENVIRONMENTKIND MINVALUE 1 INCREMENT 1 START 1;

-- TABLA PARA GUARDAR LOS AMBIENTES DE ENVIO DE DOCUMENTOS
CREATE TABLE IF NOT EXISTS electronicdocument.EDTENVIRONMENTKIND
(
    ID          NUMERIC(10) PRIMARY KEY,
    CODE        VARCHAR(2) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(100),
    DETAIL      VARCHAR(200),
    STATUS_ID   NUMERIC(10),
    CONSTRAINT FK_KINDENVIRONMENT_STATUSID FOREIGN KEY(STATUS_ID) REFERENCES electronicdocument.EDtstatus(ID) ON DELETE NO ACTION ON UPDATE CASCADE
);

-- DATOS DE INICIALES DE AMBIENTES
INSERT INTO electronicdocument.EDTENVIRONMENTKIND(CODE, DESCRIPTION, DETAIL, STATUS_ID) VALUES (NEXTVAL('electronicdocument.EDSENVIRONMENTKIND'),'1','PRUEBAS','AMBIENTE DE PRUEBAS',1);
INSERT INTO electronicdocument.EDTENVIRONMENTKIND(CODE, DESCRIPTION, DETAIL, STATUS_ID) VALUES (NEXTVAL('electronicdocument.EDSENVIRONMENTKIND'),'2','PRODUCCÌON','AMBIENTE DE PRODUCCÌON',1);

-- CREANDO SECUENCIA PARA TIPOS DE DOCUMENTOS
CREATE SEQUENCE IF NOT EXISTS  electronicdocument.EDSDOCUMENTKIND START 1 INCREMENT 1 MINVALUE 1;

-- CREANDO TABLA PARA TIPOS DE DOCUMENTOS
CREATE TABLE electronicdocument.EDTDOCUMENTKIND
(
  ID NUMERIC(10) PRIMARY KEY,
  CODE VARCHAR(2) UNIQUE NOT NULL ,
  DESCRIPTION VARCHAR(100) NOT NULL UNIQUE,
  DETAILS VARCHAR(250) NOT NULL,
  STATUS_ID NUMERIC(10),
  CONSTRAINT FK_DOCUMENTKIND_STATUS FOREIGN KEY(STATUS_ID) REFERENCES electronicdocument.EDTSTATUS(ID) ON DELETE NO ACTION ON UPDATE CASCADE
);


-- DATOS INICIALES PARA  TIPOS DE DOCUMENTOS
INSERT INTO electronicdocument.EDTDOCUMENTKIND(CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES (NEXTVAL('electronicdocument.EDSDOCUMENTKIND'),'01','FACTURA','FACTURA DE VENTA',1);
INSERT INTO electronicdocument.EDTDOCUMENTKIND(CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES (NEXTVAL('electronicdocument.EDSDOCUMENTKIND'),'03','LIQUIDACIÓN DE COMPRA DE BIENES Y PRESTACIÓN DE SERVICIOS','DOCUMENTO PARA LIQUIDAR COMPRAS LOCALES O SERVICIOS PROFESIONALES',1);
INSERT INTO electronicdocument.EDTDOCUMENTKIND(CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES (NEXTVAL('electronicdocument.EDSDOCUMENTKIND'),'04','NOTA DE CRÉDITO','DEVOLUCION TOTAL A PARCIAL DE UNA FACTURA, SALDO A FAVOR O DEVULUCION AL RECEPTOR DEL DOCUMENTO',1);
INSERT INTO electronicdocument.EDTDOCUMENTKIND(CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES (NEXTVAL('electronicdocument.EDSDOCUMENTKIND'),'05','NOTA DE DÉBITO','COMPROMISO DE PAGO, SALDO A FAVOR DEL EMISOR DEL DOCUMENTO',1);
INSERT INTO electronicdocument.EDTDOCUMENTKIND(CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES (NEXTVAL('electronicdocument.EDSDOCUMENTKIND'),'06','GUÍA DE REMISIÓN','MOVIMIENTO DE UNA MERCADERIA FISICA DE UNA UBICACION A OTRA',1);
INSERT INTO electronicdocument.EDTDOCUMENTKIND(CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES (NEXTVAL('electronicdocument.EDSDOCUMENTKIND'),'07','COMPROBANTE DE RETENCIÓN','PORCENTAJE QUE SE QUEADA CON EL EMISOR DEL DOCUMENTO, DEPENDIENDO DE LA TRANSACION',1);


-- CREANDO SECUENCIA PARA TIPO DE EMISION
CREATE SEQUENCE IF NOT EXISTS electronicdocument.EDSEMISSIONKIND START 1 INCREMENT 1 MINVALUE 1;

CREATE TABLE electronicdocument.EDTEMISSIONKIND
(
    ID NUMERIC(10) PRIMARY KEY DEFAULT nextval('electronicdocument.EDSEMISSIONKIND'),
    CODE VARCHAR(2) UNIQUE NOT NULL ,
    DESCRIPTION VARCHAR(100) NOT NULL UNIQUE,
    DETAILS VARCHAR(250) NOT NULL,
    STATUS_ID NUMERIC(10),
    STATUS_CODE VARCHAR(5),
    CONSTRAINT FK_EMISSIONKIND_STATUS FOREIGN KEY(STATUS_ID) REFERENCES electronicdocument.EDTSTATUS(ID) ON DELETE NO ACTION ON UPDATE CASCADE,
    CONSTRAINT FK_EMISSIONKIND_STATUSCODE FOREIGN KEY(STATUS_CODE) REFERENCES electronicdocument.EDTSTATUS(CODE) ON DELETE NO ACTION ON UPDATE CASCADE
);

-- INITIAL DATA FOR EMISION KIND
INSERT INTO electronicdocument.EDTEMISSIONKIND(CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES ('1','EMISIÓN NORMAL','EMISIÓN QUE SE HIZO SIN INCONVENIENTES',1,'ACT');


-- SECUENCIA QUE MANEJA LOS TIPOS DE IDENTIFICACION
CREATE SEQUENCE IF NOT EXISTS electronicdocument.EDSKINDID START 6 INCREMENT 1 MINVALUE 6;

CREATE TABLE IF NOT EXISTS electronicdocument.EDTKINDID
(
    ID NUMERIC(10) PRIMARY KEY,
    CODE VARCHAR(2) UNIQUE,
    DESCRIPTION VARCHAR(100),
    DETAILS VARCHAR(250),
    STATUS_ID NUMERIC(10),
    CONSTRAINT FK_KINDID_STATUS FOREIGN KEY(STATUS_ID) REFERENCES electronicdocument.EDTSTATUS(ID) ON DELETE NO ACTION ON UPDATE CASCADE
);

INSERT INTO electronicdocument.EDTKINDID(ID, CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES(1, '04','RUC','REGISTRO UNICO DE CONTRIBUYENTE 13 DIGITOS',1);
INSERT INTO electronicdocument.EDTKINDID(ID, CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES(2,'05','CEDULA','CEDULA DE IDENTIDAD PERSONA NATURAL 10 DIGITOS',1);
INSERT INTO electronicdocument.EDTKINDID(ID, CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES(3,'06','PASAPORTE','PASAPORTE SEGUN PAIS DE ORIGEN',1);
INSERT INTO electronicdocument.EDTKINDID(ID, CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES(4,'07','VENTA A CONSUMIDOR FINAL','VENTA A CONSUMIDOR FINAL: SE CONSIGNARÁ 13 DÍGITOS DE NUEVE EN LA IDENTIFICACIÓN DEL CLIENTE 9999999999999',1);
INSERT INTO electronicdocument.EDTKINDID(ID, CODE, DESCRIPTION, DETAILS, STATUS_ID) VALUES(5,'08','IDENTIFICACION DELEXTERIOR','IDENTIFICACIÓN DEL EXTERIOR: CORRESPONDERÁ AL NÚMERO DE IDENTIFICACIÓN OTORGADO POR LA ADMINISTRACIÓN TRIBUTARIA
(AT) DEL PAÍS QUE ES RESIDENTE FISCAL',1);




-- SECUENCIA PARA LOS CLIENTES QUE RECIBEN FACTURAS (RECEPTORES DE LAS FACTURAS)
CREATE SEQUENCE IF NOT EXISTS electronicdocument.EDSDOCUMENTRECEIVER START 4 INCREMENT 1 MINVALUE 4;

-- TABLA PARA GUARDAR RECEPTORES DE FACTURAS
CREATE TABLE IF NOT EXISTS electronicdocument.EDTDOCUMENTRECEIVER
(
    ID NUMERIC(10) PRIMARY KEY,
    CODE VARCHAR(30) NOT NULL GENERATED ALWAYS AS (CONCAT(EDTDOCUMENTRECEIVER.ID,EDTDOCUMENTRECEIVER.USER)) STORED,
    USER VARCHAR(30) NOT NULL,
    PASSWORD TEXT(70) NOT NULL GENERATED ALWAYS AS (CRYPT('xxxxxxxxxx001', GEN_SALT('bf'))) STORED,
    STATUS_ID NUMERIC(10) NOT NULL,
    CONSTRAINT FK_INVOICERECEIVER_STATUS FOREIGN KEY(STATUS_ID) REFERENCES electronicdocument.EDTSTATUS(ID) ON DELETE NO ACTION ON UPDATE CASCADE
);

-- DATOS INICIALES PARA RECEPTORES DE FACTURAS (DATOS DE PRUEBA)
INSERT INTO electronicdocument.EDTDOCUMENTRECEIVER(ID,USER,STATUS_ID) VALUES (1,'xxxxxxxxxx001',1);
INSERT INTO electronicdocument.EDTDOCUMENTRECEIVER(ID,USER,STATUS_ID) VALUES (2,'xxxxxxxxxx',1);
INSERT INTO electronicdocument.EDTDOCUMENTRECEIVER(ID,USER,STATUS_ID) VALUES (3,'xxxxxxxxxxxxx',1);

-- SECUENCIA LA IDENTIFIACION DE CLIENTES (RECEPTORES DE LAS FACTURAS)
CREATE SEQUENCE IF NOT EXISTS electronicdocument.EDSLEGALID START 1 INCREMENT 1 MINVALUE 1;

CREATE TABLE IF NOT EXISTS electronicdocument.EDTLEGALID
(
    ID NUMERIC(10) PRIMARY KEY,
    KINDID_ID NUMERIC(10) NULL,
    DOCUMENTRECEIVER_ID NUMERIC(10),
    LEGALNUMBER VARCHAR(25) UNIQUE NOT NULL ,
    BUSINESSNAME VARCHAR(200) UNIQUE NOT NULL,
    STATUS_ID NUMERIC(10) NOT NULL,
    CONSTRAINT FK_LEGALID_STATUS FOREIGN KEY(STATUS_ID) REFERENCES electronicdocument.EDTSTATUS(ID) ON DELETE NO ACTION ON UPDATE CASCADE,
    CONSTRAINT FK_LEGALID_KINDID FOREIGN KEY(KINDID_ID) REFERENCES electronicdocument.EDTKINDID(ID) ON DELETE NO ACTION ON UPDATE CASCADE,
    CONSTRAINT FK_LEGALID
);


-- SECUENCIA PARA LOS CLIENTES (RECEPTORES DE LAS FACTURAS)
CREATE SEQUENCE IF NOT EXISTS electronicdocument.EDSEMAIL START 1 INCREMENT 1 MINVALUE 1;

CREATE TABLE IF NOT EXISTS electronicdocument.EDTEMAIL
(
    ID NUMERIC(10) PRIMARY KEY DEFAULT nextval('electronicdocument.EDSEMAIL'),
    EMAIL TEXT(100) NOT NULL UNIQUE,

);




